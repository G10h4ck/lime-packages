#!/usr/bin/env lua
--[[
Copyright 2018 Marcos Gutierrez <gmarcos87@gmail.com>
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-3.0
]]--

require "ubus"
local json = require 'luci.jsonc'
local utils = require 'lime.utils'

local function printJson (obj)
    print(json.stringify(obj))
end

local conn = ubus.connect()
if not conn then
    error("Failed to connect to ubus")
end

local function read_content(msg)
    local path = '/etc/pirania/content.json'
    printJson(utils.read_obj_store(path))
end

local function write_content(msg)
    local path = '/etc/pirania/content.json'
    printJson(utils.write_obj_store(path, msg))
end

local methods = {
    read_content = { no_params = 0 },
    write_content = {
        title = 'value',
        backgroundColor = 'value',
        welcome = 'value',
        body = 'value',
        logo = 'value',
        background_color = 'value'
    },
}

if arg[1] == 'list' then
    printJson(methods)
end

if arg[1] == 'call' then
    local msg = io.read()
    msg = json.parse(msg)
    if      arg[2] == 'read_content'    then read_content(msg)
    elseif  arg[2] == 'write_content'   then write_content(msg)
    else printJson({ error = "Method not found" })
    end
end

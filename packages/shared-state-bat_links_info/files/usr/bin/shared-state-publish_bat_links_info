#!/usr/bin/lua

--! LibreMesh
--! Copyright (C) 2023  Javier Jorge <jjorge@inti.gob.ar>
--! Copyright (C) 2023  Asociaci√≥n Civil Altermundi <info@altermundi.net>
--!
--! This program is free software: you can redistribute it and/or modify
--! it under the terms of the GNU Affero General Public License as
--! published by the Free Software Foundation, either version 3 of the
--! License, or (at your option) any later version.
--!
--! This program is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--! GNU Affero General Public License for more details.
--!
--! You should have received a copy of the GNU Affero General Public License
--! along with this program.  If not, see <http://www.gnu.org/licenses/>.

local JSON = require("luci.jsonc")
local utils = require('lime.utils')
local network = require ("lime.network")

local hostname = utils.hostname()
function get_bat_links_info()
	local batneights_obj={}
	local batneights = utils.unsafe_shell("batctl oj")
	batneights = string.gsub(batneights,"neigh_address","dst_mac")
	batneights = string.gsub(batneights,"orig_address","src_mac")
	batneights = string.gsub(batneights,"hard_ifname","iface")
	batneights_obj = JSON.parse(batneights)
	for key,value in pairs (batneights_obj) do
		value.hard_ifindex=nil
	end
	return batneights_obj
end

local result = { [hostname] = get_bat_links_info() }
io.popen("shared-state insert bat_links_info", "w"):write(JSON.stringify(result))
